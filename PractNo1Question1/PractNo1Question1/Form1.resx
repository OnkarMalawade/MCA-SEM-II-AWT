<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>